---
- name: Install development software
  become: true
  apt:
    name:
      - vim
      - git
      - zsh
      - fonts-powerline
      - yadm
      - python3-pip
      - python3-venv

- name: Ensure git directory
  file:
    path: "{{ git_dir }}"
    state: directory

- name: Install pipx
  pip:
    name: pipx

- name: Generate SSH key pair
  openssh_keypair:
    path: "{{ home }}/.ssh/id_ed25519"
    type: ed25519
  register: ssh_id

- name: Prompt to register SSH key
  pause:
    prompt: "A new SSH key was created, register it where desired:\n\t{{ ssh_id.public_key }}\nAny key to continue"
  when: ssh_id.changed

- name: Check if VS code is installed
  command: dpkg-query -W code
  register: check_code
  failed_when: false
  changed_when: false

- name: Install VS code
  become: true
  apt:
    deb: https://code.visualstudio.com/sha/download?build=stable&os=linux-deb-x64
  when: check_code.rc == 1

- name: Add docker GPG key
  become: true
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg

- name: Add docker repository
  become: true
  apt_repository:
    repo: "deb https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"

- name: Install docker
  become: true
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-compose-plugin

- name: Create docker group
  become: true
  group:
    name: docker

- name: Add our user to the docker group
  become: true
  user:
    name: "{{ username }}"
    groups: docker
    append: yes

- name: Check for oh-my-zsh install
  stat:
    path: "{{ home }}/.oh-my-zsh/oh-my-zsh.sh"
  register: check_ohmyzsh

- name: Create oh-my-zsh tempdir
  tempfile:
    state: directory
  register: tmp_ohmyzsh
  when: not check_ohmyzsh.stat.exists

- name: Get oh-my-zsh install script
  get_url:
    url: https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
    dest: "{{ tmp_ohmyzsh.path }}/install.sh"
  when: not check_ohmyzsh.stat.exists

- name: Install oh-my-zsh
  command:
    cmd: 'sh {{ tmp_ohmyzsh.path }}/install.sh "" --unattended'
  when: not check_ohmyzsh.stat.exists

- name: Set our user to use zsh
  become: true
  user:
    name: "{{ username }}"
    shell: /usr/bin/zsh

- name: Check if we have our dotfiles
  stat:
    path: "{{ app_install_dir }}/yadm/repo.git"
  register: check_dotfiles

- name: Get our dotfiles repo
  command:
    cmd: "yadm clone {{ dotfiles_repo }} -f"
  when: not check_dotfiles.stat.exists

# TODO there might be something wrong with this
- name: Assert our dotfiles dominance
  command:
    cmd: "yadm checkout \"{{ home }}\""
  when: not check_dotfiles.stat.exists
